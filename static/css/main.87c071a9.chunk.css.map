{"version":3,"sources":["main.87c071a9.chunk.css","App.scss","../assets/styles/_breakpoints.scss","collection.scss","../../../assets/styles/_breakpoints.scss","education.scss","expertise.scss","styles.scss","works.scss","InfoCard.scss","../../assets/styles/_breakpoints.scss","../../assets/styles/_wrapper.scss"],"names":[],"mappings":"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","file":"main.87c071a9.chunk.css","sourcesContent":["@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n@import url(https://fonts.googleapis.com/css2?family=Noto+Serif+TC:wght@400;700&family=Open+Sans:ital,wght@0,400;0,600;1,400;1,600&family=Roboto+Slab:wght@400;700&display=swap);\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}@font-face{font-family:Huninn;src:local(\"FiraSans\"),url(/my-resume/static/media/jf-openhuninn-1.1.e9ac35c6.ttf) format(\"truetype\")}*{font-family:\"Roboto Slab\",\"Noto Serif TC\";font-size:15px;color:#4a4131}h1,h2,h3,h4,h5{font-family:\"Roboto Slab\",\"Noto Serif TC\"}h1{display:inline-block;padding:0 .75em .5em 0;margin-bottom:1em;border-bottom:solid 3px #93032e}span{color:#978563;cursor:pointer}span:hover{color:#4a4131}img{border-radius:.5em}.ui.container{margin-top:15px}#app{display:flex}#app #content{background-color:rgba(247,245,243,.55);margin-left:18em;width:100%}@media screen and (max-width: 1280px){#app #content{margin-left:0;margin-top:3.5em}}@media screen and (max-width: 736px){#app #content{margin:0}}\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}#collectionContainer .content .section{display:flex}@media screen and (max-width: 736px){#collectionContainer .content .section{flex-direction:column}}#collectionContainer .content .section .image{flex:1 0 60%}#collectionContainer .content .section .image img{width:100%}#collectionContainer .content .section .image img:hover{cursor:pointer}@media screen and (min-width: 737px){#collectionContainer .content .section .image{padding-right:2em}}@media screen and (max-width: 736px){#collectionContainer .content .section .image{margin-bottom:2em}}#collectionContainer .content .section .description{flex:1 0 30%}#collectionContainer .content .section .description h2{text-align:center}\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}.MuiPaper-elevation1{box-shadow:none !important}.MuiPaper-root{background-color:inherit !important}.MuiAccordion-root.Mui-expanded{margin:0}.MuiAccordion-root::before{background-color:inherit !important}.MuiAccordionSummary-root{flex-direction:row-reverse}.MuiIconButton-root{margin-right:.3em !important}#educationContainer .accordionTitle{display:flex;align-items:center;color:#978563;line-height:1.5em;cursor:pointer;font-size:1.6em}#educationContainer .accordionTitle:hover{color:#4a4131}\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}#expertiseContainer p{margin:0 0 .5em}#expertiseContainer .content{display:flex}@media screen and (max-width: 736px){#expertiseContainer .content{flex-direction:column}}#expertiseContainer .content .section{padding-right:2em;line-height:1.5em}@media screen and (max-width: 736px){#expertiseContainer .content .section{margin:0 0 2.5em 0}}\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}#infoContainer{display:flex}@media screen and (max-width: 736px){#infoContainer{flex-direction:column}}#infoContainer .image{flex-grow:1}@media screen and (min-width: 737px){#infoContainer .image{margin-right:2em}}@media screen and (max-width: 736px){#infoContainer .image{margin-bottom:2em}}#infoContainer .content{flex:1 0 35%}#infoContainer .content .item{display:flex;align-items:center;margin-bottom:1em}#infoContainer .content .item .icon{fill:#93032e;margin-right:1em}#infoContainer .socialLink{padding:2em 0 0 0}@media screen and (max-width: 736px){#infoContainer .socialLink{text-align:center}}#infoContainer .socialLink i{font-size:200%;color:#93032e;cursor:pointer}#infoContainer .socialLink i:hover{color:#61021e}\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}#introContainer .content{display:flex}@media screen and (max-width: 736px){#introContainer .content{flex-direction:column}}#introContainer .content .section{line-height:1.5em}@media screen and (min-width: 737px){#introContainer .content .section{padding-right:2em}}@media screen and (max-width: 736px){#introContainer .content .section{margin:0 0 2.5em 0}}#introContainer .content .section.intro{flex:1 0 66%}#introContainer .content .section.interest{flex:1 0 33%}\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}#skillsContainer .content{display:flex}@media screen and (max-width: 736px){#skillsContainer .content{flex-direction:column}}#skillsContainer .content .section{flex:0 0 50%;padding-right:2em;line-height:1.5em}@media screen and (max-width: 736px){#skillsContainer .content .section{margin:0 0 2.5em 0}}\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}.MuiPaper-elevation1{box-shadow:none !important}.MuiPaper-root{background-color:inherit !important}.MuiAccordion-root.Mui-expanded{margin:0}.MuiAccordion-root::before{background-color:inherit !important}.MuiAccordionSummary-root{flex-direction:row-reverse}.MuiIconButton-root{margin-right:.3em !important}#worksContainer .accordionTitle{display:flex;align-items:center;color:#978563;line-height:1.5em;cursor:pointer;font-size:1.6em}#worksContainer .accordionTitle:hover{color:#4a4131}\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}#infoCard{padding:6em 0 4em 0;border-bottom:solid 1.5px #ac9d81}\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}#sidebar{padding:2.5em 2.5em;background:#ac9d81;cursor:default;height:100vh;left:0;overflow-x:hidden;overflow-y:auto;position:fixed;text-align:right;top:0;width:18em;z-index:10000}#sidebar>.inner{display:flex;flex-direction:column;justify-content:center;transform:translateY(0);transition:opacity 1s ease;min-height:100%;opacity:1;width:100%}body.is-ie #sidebar>.inner{height:100%}#sidebar nav>ul{list-style:none;padding:0}#sidebar nav>ul>li{transform:translateY(0);transition:opacity 0.15s ease,transform 0.75s ease;margin:1.5em 0 0 0;opacity:1;padding:0;position:relative}#sidebar nav>ul>li:first-child{margin:0}#sidebar nav>ul>li:hover{cursor:pointer}#sidebar nav>ul>li:nth-child(1){transition-delay:0.45s}#sidebar nav>ul>li:nth-child(2){transition-delay:0.65s}#sidebar nav>ul>li:nth-child(3){transition-delay:0.85s}#sidebar nav>ul>li:nth-child(4){transition-delay:1.05s}#sidebar nav>ul>li:nth-child(5){transition-delay:1.25s}#sidebar nav>ul>li:nth-child(6){transition-delay:1.45s}#sidebar nav>ul>li:nth-child(7){transition-delay:1.65s}#sidebar nav>ul>li:nth-child(8){transition-delay:1.85s}#sidebar nav>ul>li:nth-child(9){transition-delay:2.05s}#sidebar nav>ul>li:nth-child(10){transition-delay:2.25s}#sidebar nav>ul>li:nth-child(11){transition-delay:2.45s}#sidebar nav>ul>li:nth-child(12){transition-delay:2.65s}#sidebar nav>ul>li:nth-child(13){transition-delay:2.85s}#sidebar nav>ul>li:nth-child(14){transition-delay:3.05s}#sidebar nav>ul>li:nth-child(15){transition-delay:3.25s}#sidebar nav>ul>li:nth-child(16){transition-delay:3.45s}#sidebar nav>ul>li:nth-child(17){transition-delay:3.65s}#sidebar nav>ul>li:nth-child(18){transition-delay:3.85s}#sidebar nav>ul>li:nth-child(19){transition-delay:4.05s}#sidebar nav>ul>li:nth-child(20){transition-delay:4.25s}#sidebar nav a{transition:color 0.2s ease;border:0;color:rgba(247,245,243,.35);display:block;font-size:.6em;font-weight:bold;letter-spacing:.25em;line-height:1.75;outline:0;padding:1.35em 0;position:relative;text-decoration:none;text-transform:uppercase}#sidebar nav a:before,#sidebar nav a:after{border-radius:.2em;bottom:0;content:\"\";height:.2em;position:absolute;right:0;width:100%}#sidebar nav a:before{background:#b6a990}#sidebar nav a:after{background-image:linear-gradient(to right, #93032E, #E6B5AD);transition:max-width 0.2s ease;max-width:0}#sidebar nav a:hover{color:rgba(247,245,243,.55)}#sidebar nav a.active{color:#fff}#sidebar nav a.active:after{max-width:100%}body.is-preload #sidebar>.inner{opacity:0}body.is-preload #sidebar nav ul li{transform:translateY(2em);opacity:0}@media screen and (max-width: 1280px){#sidebar{height:3.5em;left:0;line-height:3.5em;overflow:hidden;padding:0;text-align:center;top:0;width:100%}#sidebar>.inner{flex-direction:row;align-items:stretch;height:inherit;line-height:inherit}#sidebar nav{height:inherit;line-height:inherit}#sidebar nav ul{display:flex;height:inherit;line-height:inherit;margin:0}#sidebar nav ul li{display:block;height:inherit;line-height:inherit;margin:0 0 0 2em;padding:0}#sidebar nav a{height:inherit;line-height:inherit;padding:0}#sidebar nav a:after{background-image:none;background-color:#93032e}}@media screen and (max-width: 736px){#sidebar{display:none}}\n.wrapper{position:relative}.wrapper>.inner{padding:5em 5em 2.5em 5em;max-width:100%;width:75em}@media screen and (max-width: 1680px){.wrapper>.inner{padding:4em 4em 2em 4em}}@media screen and (max-width: 1280px){.wrapper>.inner{width:100%}}@media screen and (max-width: 736px){.wrapper>.inner{padding:3em 2em 1em 2em}}.wrapper.alt{background-color:#978563}.wrapper.style1{background-color:#93032e}.wrapper.style1-alt{background-color:#61021e}.wrapper.style2{background-color:#f56a6a}.wrapper.style2-alt{background-color:#f23a3a}.wrapper.style3{background-color:#e6b5ad}.wrapper.style3-alt{background-color:#da9286}.wrapper.fullscreen{display:flex;flex-direction:column;justify-content:center;min-height:100vh}body.is-ie .wrapper.fullscreen{height:100vh}@media screen and (max-width: 1280px){.wrapper.fullscreen{min-height:calc(100vh - 2.5em)}body.is-ie .wrapper.fullscreen{height:calc(100vh - 2.5em)}}@media screen and (max-width: 736px){.wrapper.fullscreen{padding:2em 0;min-height:0}body.is-ie .wrapper.fullscreen{height:auto}}.wrapper.fade-up>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-up.inactive>.inner,body.is-preload .wrapper.fade-up>.inner{opacity:0;transform:translateY(1em)}.wrapper.fade-down>.inner{transform:translateY(0);transition:opacity 1s ease,transform 1s ease;opacity:1}.wrapper.fade-down.inactive>.inner,body.is-preload .wrapper.fade-down>.inner{opacity:0;transform:translateY(-1em)}.wrapper.fade>.inner{transition:opacity 1s ease;opacity:1}.wrapper.fade.inactive>.inner,body.is-preload .wrapper.fade>.inner{opacity:0}#footer>.inner a{color:#f56a6a}#footer>.inner a:hover{color:#f23a3a}#footer>.inner .menu{font-size:.8em;color:rgba(247,245,243,.15)}#footer li{color:rgba(247,245,243,.55)}\n","@import 'assets/styles/main.scss';\r\n\r\n@font-face {\r\n    font-family: Huninn;\r\n    src: local('FiraSans'), url(../assets/fonts/jf-openhuninn-1.1/jf-openhuninn-1.1.ttf) format('truetype');\r\n}\r\n\r\n* {\r\n    font-family: _font(family);\r\n    font-size: 15px;\r\n    color: _palette(bg-dark);\r\n}\r\n\r\nh1, h2, h3, h4, h5 {\r\n    font-family: _font(family);\r\n}\r\n\r\nh1 {\r\n    display: inline-block;\r\n    padding: 0 0.75em 0.5em 0;\r\n    margin-bottom: 1em;\r\n    border-bottom: solid 3px _palette(accent1);\r\n}\r\n\r\nspan {\r\n    color: _palette(bg-alt);\r\n    cursor: pointer;\r\n    &:hover {\r\n        color: _palette(bg-dark);\r\n    }\r\n}\r\n\r\nimg {\r\n    border-radius: 0.5em;\r\n}\r\n\r\n.ui.container {\r\n    margin-top: 15px;\r\n}\r\n\r\n#app {\r\n    display: flex;\r\n    #content{\r\n        background-color: _palette(fg);\r\n        margin-left: _size(sidebar-width);\r\n        width: 100%;\r\n        @include breakpoint('<=large') {\r\n            margin-left: 0;\r\n            margin-top: _size(sidebar-height);\r\n        }\r\n        @include breakpoint('<=small') {\r\n            margin: 0;\r\n        }\r\n    }\r\n}","// breakpoints.scss v1.0 | @ajlkn | MIT licensed */\r\n\r\n// Vars.\r\n\r\n/// Breakpoints.\r\n/// @var {list}\r\n$breakpoints: (\r\n    xlarge: (\r\n        1281px,\r\n        1680px,\r\n    ),\r\n    large: (\r\n        981px,\r\n        1280px,\r\n    ),\r\n    medium: (\r\n        737px,\r\n        980px,\r\n    ),\r\n    small: (\r\n        481px,\r\n        736px,\r\n    ),\r\n    xsmall: (\r\n        361px,\r\n        480px,\r\n    ),\r\n    xxsmall: (\r\n        null,\r\n        360px,\r\n    ),\r\n    xlarge-to-max: '(min-width: 1681px)',\r\n    small-to-xlarge: '(min-width: 481px) and (max-width: 1680px)',\r\n);\r\n\r\n// Mixins.\r\n\r\n/// Wraps @content in a @media block targeting a specific orientation.\r\n/// @param {string} $orientation Orientation.\r\n@mixin orientation($orientation) {\r\n    @media screen and (orientation: #{$orientation}) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Wraps @content in a @media block using a given query.\r\n/// @param {string} $query Query.\r\n@mixin breakpoint($query: null) {\r\n    $breakpoint: null;\r\n    $op: null;\r\n    $media: null;\r\n\r\n    // Determine operator, breakpoint.\r\n\r\n    // Greater than or equal.\r\n    @if (str-slice($query, 0, 2) == '>=') {\r\n        $op: 'gte';\r\n        $breakpoint: str-slice($query, 3);\r\n    }\r\n\r\n    // Less than or equal.\r\n    @else if (str-slice($query, 0, 2) == '<=') {\r\n        $op: 'lte';\r\n        $breakpoint: str-slice($query, 3);\r\n    }\r\n\r\n    // Greater than.\r\n    @else if (str-slice($query, 0, 1) == '>') {\r\n        $op: 'gt';\r\n        $breakpoint: str-slice($query, 2);\r\n    }\r\n\r\n    // Less than.\r\n    @else if (str-slice($query, 0, 1) == '<') {\r\n        $op: 'lt';\r\n        $breakpoint: str-slice($query, 2);\r\n    }\r\n\r\n    // Not.\r\n    @else if (str-slice($query, 0, 1) == '!') {\r\n        $op: 'not';\r\n        $breakpoint: str-slice($query, 2);\r\n    }\r\n\r\n    // Equal.\r\n    @else {\r\n        $op: 'eq';\r\n        $breakpoint: $query;\r\n    }\r\n\r\n    // Build media.\r\n    @if ($breakpoint and map-has-key($breakpoints, $breakpoint)) {\r\n        $a: map-get($breakpoints, $breakpoint);\r\n\r\n        // Range.\r\n        @if (type-of($a) == 'list') {\r\n            $x: nth($a, 1);\r\n            $y: nth($a, 2);\r\n\r\n            // Max only.\r\n            @if ($x == null) {\r\n                // Greater than or equal (>= 0 / anything)\r\n                @if ($op == 'gte') {\r\n                    $media: 'screen';\r\n                }\r\n\r\n                // Less than or equal (<= y)\r\n                @else if ($op == 'lte') {\r\n                    $media: 'screen and (max-width: ' + $y + ')';\r\n                }\r\n\r\n                // Greater than (> y)\r\n                @else if ($op == 'gt') {\r\n                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Less than (< 0 / invalid)\r\n                @else if ($op == 'lt') {\r\n                    $media: 'screen and (max-width: -1px)';\r\n                }\r\n\r\n                // Not (> y)\r\n                @else if ($op == 'not') {\r\n                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Equal (<= y)\r\n                @else {\r\n                    $media: 'screen and (max-width: ' + $y + ')';\r\n                }\r\n            }\r\n\r\n            // Min only.\r\n            @else if ($y == null) {\r\n                // Greater than or equal (>= x)\r\n                @if ($op == 'gte') {\r\n                    $media: 'screen and (min-width: ' + $x + ')';\r\n                }\r\n\r\n                // Less than or equal (<= inf / anything)\r\n                @else if ($op == 'lte') {\r\n                    $media: 'screen';\r\n                }\r\n\r\n                // Greater than (> inf / invalid)\r\n                @else if ($op == 'gt') {\r\n                    $media: 'screen and (max-width: -1px)';\r\n                }\r\n\r\n                // Less than (< x)\r\n                @else if ($op == 'lt') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\r\n                }\r\n\r\n                // Not (< x)\r\n                @else if ($op == 'not') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\r\n                }\r\n\r\n                // Equal (>= x)\r\n                @else {\r\n                    $media: 'screen and (min-width: ' + $x + ')';\r\n                }\r\n            }\r\n\r\n            // Min and max.\r\n            @else {\r\n                // Greater than or equal (>= x)\r\n                @if ($op == 'gte') {\r\n                    $media: 'screen and (min-width: ' + $x + ')';\r\n                }\r\n\r\n                // Less than or equal (<= y)\r\n                @else if ($op == 'lte') {\r\n                    $media: 'screen and (max-width: ' + $y + ')';\r\n                }\r\n\r\n                // Greater than (> y)\r\n                @else if ($op == 'gt') {\r\n                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Less than (< x)\r\n                @else if ($op == 'lt') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\r\n                }\r\n\r\n                // Not (< x and > y)\r\n                @else if ($op == 'not') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + '), screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Equal (>= x and <= y)\r\n                @else {\r\n                    $media: 'screen and (min-width: ' + $x + ') and (max-width: ' + $y + ')';\r\n                }\r\n            }\r\n        }\r\n\r\n        // String.\r\n        @else {\r\n            // Missing a media type? Prefix with \"screen\".\r\n            @if (str-slice($a, 0, 1) == '(') {\r\n                $media: 'screen and ' + $a;\r\n            }\r\n\r\n            // Otherwise, use as-is.\r\n            @else {\r\n                $media: $a;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Output.\r\n    @media #{$media} {\r\n        @content;\r\n    }\r\n}\r\n","@import 'assets/styles/main.scss';\r\n\r\n#collectionContainer {\r\n    .content {\r\n        .section {\r\n            display: flex;\r\n            @include breakpoint('<=small') {\r\n                flex-direction: column;\r\n            }\r\n            .image {\r\n                flex: 1 0 60%;\r\n                img {\r\n                    width: 100%;\r\n                    &:hover {\r\n                        cursor: pointer;\r\n                    }\r\n                }\r\n                @include breakpoint('>small') {\r\n                    padding-right: 2em;\r\n                }\r\n                @include breakpoint('<=small') {\r\n                    margin-bottom: 2em;\r\n                }\r\n            }\r\n            .description {\r\n                flex: 1 0 30%;\r\n                h2 {\r\n                    text-align: center;\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","// breakpoints.scss v1.0 | @ajlkn | MIT licensed */\r\n\r\n// Vars.\r\n\r\n/// Breakpoints.\r\n/// @var {list}\r\n$breakpoints: (\r\n    xlarge: (\r\n        1281px,\r\n        1680px,\r\n    ),\r\n    large: (\r\n        981px,\r\n        1280px,\r\n    ),\r\n    medium: (\r\n        737px,\r\n        980px,\r\n    ),\r\n    small: (\r\n        481px,\r\n        736px,\r\n    ),\r\n    xsmall: (\r\n        361px,\r\n        480px,\r\n    ),\r\n    xxsmall: (\r\n        null,\r\n        360px,\r\n    ),\r\n    xlarge-to-max: '(min-width: 1681px)',\r\n    small-to-xlarge: '(min-width: 481px) and (max-width: 1680px)',\r\n);\r\n\r\n// Mixins.\r\n\r\n/// Wraps @content in a @media block targeting a specific orientation.\r\n/// @param {string} $orientation Orientation.\r\n@mixin orientation($orientation) {\r\n    @media screen and (orientation: #{$orientation}) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Wraps @content in a @media block using a given query.\r\n/// @param {string} $query Query.\r\n@mixin breakpoint($query: null) {\r\n    $breakpoint: null;\r\n    $op: null;\r\n    $media: null;\r\n\r\n    // Determine operator, breakpoint.\r\n\r\n    // Greater than or equal.\r\n    @if (str-slice($query, 0, 2) == '>=') {\r\n        $op: 'gte';\r\n        $breakpoint: str-slice($query, 3);\r\n    }\r\n\r\n    // Less than or equal.\r\n    @else if (str-slice($query, 0, 2) == '<=') {\r\n        $op: 'lte';\r\n        $breakpoint: str-slice($query, 3);\r\n    }\r\n\r\n    // Greater than.\r\n    @else if (str-slice($query, 0, 1) == '>') {\r\n        $op: 'gt';\r\n        $breakpoint: str-slice($query, 2);\r\n    }\r\n\r\n    // Less than.\r\n    @else if (str-slice($query, 0, 1) == '<') {\r\n        $op: 'lt';\r\n        $breakpoint: str-slice($query, 2);\r\n    }\r\n\r\n    // Not.\r\n    @else if (str-slice($query, 0, 1) == '!') {\r\n        $op: 'not';\r\n        $breakpoint: str-slice($query, 2);\r\n    }\r\n\r\n    // Equal.\r\n    @else {\r\n        $op: 'eq';\r\n        $breakpoint: $query;\r\n    }\r\n\r\n    // Build media.\r\n    @if ($breakpoint and map-has-key($breakpoints, $breakpoint)) {\r\n        $a: map-get($breakpoints, $breakpoint);\r\n\r\n        // Range.\r\n        @if (type-of($a) == 'list') {\r\n            $x: nth($a, 1);\r\n            $y: nth($a, 2);\r\n\r\n            // Max only.\r\n            @if ($x == null) {\r\n                // Greater than or equal (>= 0 / anything)\r\n                @if ($op == 'gte') {\r\n                    $media: 'screen';\r\n                }\r\n\r\n                // Less than or equal (<= y)\r\n                @else if ($op == 'lte') {\r\n                    $media: 'screen and (max-width: ' + $y + ')';\r\n                }\r\n\r\n                // Greater than (> y)\r\n                @else if ($op == 'gt') {\r\n                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Less than (< 0 / invalid)\r\n                @else if ($op == 'lt') {\r\n                    $media: 'screen and (max-width: -1px)';\r\n                }\r\n\r\n                // Not (> y)\r\n                @else if ($op == 'not') {\r\n                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Equal (<= y)\r\n                @else {\r\n                    $media: 'screen and (max-width: ' + $y + ')';\r\n                }\r\n            }\r\n\r\n            // Min only.\r\n            @else if ($y == null) {\r\n                // Greater than or equal (>= x)\r\n                @if ($op == 'gte') {\r\n                    $media: 'screen and (min-width: ' + $x + ')';\r\n                }\r\n\r\n                // Less than or equal (<= inf / anything)\r\n                @else if ($op == 'lte') {\r\n                    $media: 'screen';\r\n                }\r\n\r\n                // Greater than (> inf / invalid)\r\n                @else if ($op == 'gt') {\r\n                    $media: 'screen and (max-width: -1px)';\r\n                }\r\n\r\n                // Less than (< x)\r\n                @else if ($op == 'lt') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\r\n                }\r\n\r\n                // Not (< x)\r\n                @else if ($op == 'not') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\r\n                }\r\n\r\n                // Equal (>= x)\r\n                @else {\r\n                    $media: 'screen and (min-width: ' + $x + ')';\r\n                }\r\n            }\r\n\r\n            // Min and max.\r\n            @else {\r\n                // Greater than or equal (>= x)\r\n                @if ($op == 'gte') {\r\n                    $media: 'screen and (min-width: ' + $x + ')';\r\n                }\r\n\r\n                // Less than or equal (<= y)\r\n                @else if ($op == 'lte') {\r\n                    $media: 'screen and (max-width: ' + $y + ')';\r\n                }\r\n\r\n                // Greater than (> y)\r\n                @else if ($op == 'gt') {\r\n                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Less than (< x)\r\n                @else if ($op == 'lt') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\r\n                }\r\n\r\n                // Not (< x and > y)\r\n                @else if ($op == 'not') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + '), screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Equal (>= x and <= y)\r\n                @else {\r\n                    $media: 'screen and (min-width: ' + $x + ') and (max-width: ' + $y + ')';\r\n                }\r\n            }\r\n        }\r\n\r\n        // String.\r\n        @else {\r\n            // Missing a media type? Prefix with \"screen\".\r\n            @if (str-slice($a, 0, 1) == '(') {\r\n                $media: 'screen and ' + $a;\r\n            }\r\n\r\n            // Otherwise, use as-is.\r\n            @else {\r\n                $media: $a;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Output.\r\n    @media #{$media} {\r\n        @content;\r\n    }\r\n}\r\n","@import 'assets/styles/main.scss';\r\n\r\n.MuiPaper-elevation1 {\r\n    box-shadow: none !important;\r\n}\r\n\r\n.MuiPaper-root {\r\n    background-color: inherit !important;\r\n}\r\n\r\n.MuiAccordion-root.Mui-expanded {\r\n    margin: 0;\r\n}\r\n\r\n.MuiAccordion-root {\r\n    &::before {\r\n        background-color: inherit !important;\r\n    }\r\n}\r\n\r\n.MuiAccordionSummary-root {\r\n    flex-direction: row-reverse;\r\n}\r\n\r\n.MuiIconButton-root {\r\n    margin-right: 0.3em !important;\r\n}\r\n\r\n#educationContainer {\r\n    .accordionTitle {\r\n        display: flex;\r\n        align-items: center;\r\n        color: _palette(bg-alt);\r\n        line-height: 1.5em;\r\n        cursor: pointer;\r\n        font-size: 1.6em;\r\n        &:hover {\r\n            color: _palette(bg-dark);\r\n        }\r\n    }\r\n}\r\n","@import 'assets/styles/main.scss';\r\n\r\n#expertiseContainer {\r\n    p {\r\n        margin: 0 0 0.5em;\r\n    }\r\n\r\n    .content {\r\n        display: flex;\r\n        @include breakpoint('<=small') {\r\n            flex-direction: column;\r\n        }\r\n        .section {\r\n            padding-right: 2em;\r\n            line-height: 1.5em;\r\n            @include breakpoint('<=small') {\r\n                margin: 0 0 2.5em 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n","@import 'assets/styles/main.scss';\r\n\r\n// Footer\r\n\r\n#footer {\r\n    > .inner {\r\n        a {\r\n            color: _palette(accent2);\r\n\r\n            &:hover {\r\n                color: _palette(accent2-alt);\r\n            }\r\n        }\r\n\r\n        .menu {\r\n            font-size: 0.8em;\r\n            color: _palette(border);\r\n        }\r\n    }\r\n\r\n    li {\r\n        color: _palette(fg);\r\n    }\r\n\r\n    // #header + #wrapper + & {\r\n    //     > .inner {\r\n    //         margin: 0 auto;\r\n    //     }\r\n    // }\r\n}\r\n","@import 'assets/styles/main.scss';\r\n\r\n.MuiPaper-elevation1 {\r\n    box-shadow: none !important;\r\n}\r\n\r\n.MuiPaper-root {\r\n    background-color: inherit !important;\r\n}\r\n\r\n.MuiAccordion-root.Mui-expanded {\r\n    margin: 0;\r\n}\r\n\r\n.MuiAccordion-root {\r\n    &::before {\r\n        background-color: inherit !important;\r\n    }\r\n}\r\n\r\n.MuiAccordionSummary-root {\r\n    flex-direction: row-reverse;\r\n}\r\n\r\n.MuiIconButton-root {\r\n    margin-right: 0.3em !important;\r\n}\r\n\r\n#worksContainer {\r\n    .accordionTitle {\r\n        display: flex;\r\n        align-items: center;\r\n        color: _palette(bg-alt);\r\n        line-height: 1.5em;\r\n        cursor: pointer;\r\n        font-size: 1.6em;\r\n        &:hover {\r\n            color: _palette(bg-dark);\r\n        }\r\n    }\r\n}\r\n","@import 'assets/styles/main.scss';\r\n\r\n#infoCard {\r\n    padding: 6em 0 4em 0;\r\n    border-bottom: solid 1.5px _palette(bg);\r\n}","// breakpoints.scss v1.0 | @ajlkn | MIT licensed */\r\n\r\n// Vars.\r\n\r\n/// Breakpoints.\r\n/// @var {list}\r\n$breakpoints: (\r\n    xlarge: (\r\n        1281px,\r\n        1680px,\r\n    ),\r\n    large: (\r\n        981px,\r\n        1280px,\r\n    ),\r\n    medium: (\r\n        737px,\r\n        980px,\r\n    ),\r\n    small: (\r\n        481px,\r\n        736px,\r\n    ),\r\n    xsmall: (\r\n        361px,\r\n        480px,\r\n    ),\r\n    xxsmall: (\r\n        null,\r\n        360px,\r\n    ),\r\n    xlarge-to-max: '(min-width: 1681px)',\r\n    small-to-xlarge: '(min-width: 481px) and (max-width: 1680px)',\r\n);\r\n\r\n// Mixins.\r\n\r\n/// Wraps @content in a @media block targeting a specific orientation.\r\n/// @param {string} $orientation Orientation.\r\n@mixin orientation($orientation) {\r\n    @media screen and (orientation: #{$orientation}) {\r\n        @content;\r\n    }\r\n}\r\n\r\n/// Wraps @content in a @media block using a given query.\r\n/// @param {string} $query Query.\r\n@mixin breakpoint($query: null) {\r\n    $breakpoint: null;\r\n    $op: null;\r\n    $media: null;\r\n\r\n    // Determine operator, breakpoint.\r\n\r\n    // Greater than or equal.\r\n    @if (str-slice($query, 0, 2) == '>=') {\r\n        $op: 'gte';\r\n        $breakpoint: str-slice($query, 3);\r\n    }\r\n\r\n    // Less than or equal.\r\n    @else if (str-slice($query, 0, 2) == '<=') {\r\n        $op: 'lte';\r\n        $breakpoint: str-slice($query, 3);\r\n    }\r\n\r\n    // Greater than.\r\n    @else if (str-slice($query, 0, 1) == '>') {\r\n        $op: 'gt';\r\n        $breakpoint: str-slice($query, 2);\r\n    }\r\n\r\n    // Less than.\r\n    @else if (str-slice($query, 0, 1) == '<') {\r\n        $op: 'lt';\r\n        $breakpoint: str-slice($query, 2);\r\n    }\r\n\r\n    // Not.\r\n    @else if (str-slice($query, 0, 1) == '!') {\r\n        $op: 'not';\r\n        $breakpoint: str-slice($query, 2);\r\n    }\r\n\r\n    // Equal.\r\n    @else {\r\n        $op: 'eq';\r\n        $breakpoint: $query;\r\n    }\r\n\r\n    // Build media.\r\n    @if ($breakpoint and map-has-key($breakpoints, $breakpoint)) {\r\n        $a: map-get($breakpoints, $breakpoint);\r\n\r\n        // Range.\r\n        @if (type-of($a) == 'list') {\r\n            $x: nth($a, 1);\r\n            $y: nth($a, 2);\r\n\r\n            // Max only.\r\n            @if ($x == null) {\r\n                // Greater than or equal (>= 0 / anything)\r\n                @if ($op == 'gte') {\r\n                    $media: 'screen';\r\n                }\r\n\r\n                // Less than or equal (<= y)\r\n                @else if ($op == 'lte') {\r\n                    $media: 'screen and (max-width: ' + $y + ')';\r\n                }\r\n\r\n                // Greater than (> y)\r\n                @else if ($op == 'gt') {\r\n                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Less than (< 0 / invalid)\r\n                @else if ($op == 'lt') {\r\n                    $media: 'screen and (max-width: -1px)';\r\n                }\r\n\r\n                // Not (> y)\r\n                @else if ($op == 'not') {\r\n                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Equal (<= y)\r\n                @else {\r\n                    $media: 'screen and (max-width: ' + $y + ')';\r\n                }\r\n            }\r\n\r\n            // Min only.\r\n            @else if ($y == null) {\r\n                // Greater than or equal (>= x)\r\n                @if ($op == 'gte') {\r\n                    $media: 'screen and (min-width: ' + $x + ')';\r\n                }\r\n\r\n                // Less than or equal (<= inf / anything)\r\n                @else if ($op == 'lte') {\r\n                    $media: 'screen';\r\n                }\r\n\r\n                // Greater than (> inf / invalid)\r\n                @else if ($op == 'gt') {\r\n                    $media: 'screen and (max-width: -1px)';\r\n                }\r\n\r\n                // Less than (< x)\r\n                @else if ($op == 'lt') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\r\n                }\r\n\r\n                // Not (< x)\r\n                @else if ($op == 'not') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\r\n                }\r\n\r\n                // Equal (>= x)\r\n                @else {\r\n                    $media: 'screen and (min-width: ' + $x + ')';\r\n                }\r\n            }\r\n\r\n            // Min and max.\r\n            @else {\r\n                // Greater than or equal (>= x)\r\n                @if ($op == 'gte') {\r\n                    $media: 'screen and (min-width: ' + $x + ')';\r\n                }\r\n\r\n                // Less than or equal (<= y)\r\n                @else if ($op == 'lte') {\r\n                    $media: 'screen and (max-width: ' + $y + ')';\r\n                }\r\n\r\n                // Greater than (> y)\r\n                @else if ($op == 'gt') {\r\n                    $media: 'screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Less than (< x)\r\n                @else if ($op == 'lt') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + ')';\r\n                }\r\n\r\n                // Not (< x and > y)\r\n                @else if ($op == 'not') {\r\n                    $media: 'screen and (max-width: ' + ($x - 1) + '), screen and (min-width: ' + ($y + 1) + ')';\r\n                }\r\n\r\n                // Equal (>= x and <= y)\r\n                @else {\r\n                    $media: 'screen and (min-width: ' + $x + ') and (max-width: ' + $y + ')';\r\n                }\r\n            }\r\n        }\r\n\r\n        // String.\r\n        @else {\r\n            // Missing a media type? Prefix with \"screen\".\r\n            @if (str-slice($a, 0, 1) == '(') {\r\n                $media: 'screen and ' + $a;\r\n            }\r\n\r\n            // Otherwise, use as-is.\r\n            @else {\r\n                $media: $a;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Output.\r\n    @media #{$media} {\r\n        @content;\r\n    }\r\n}\r\n","///\n/// Hyperspace by HTML5 UP\n/// html5up.net | @ajlkn\n/// Free for personal and commercial use under the CCA 3.0 license (html5up.net/license)\n///\n\n/* Wrapper */\n\n.wrapper {\n    position: relative;\n\n    > .inner {\n        // @include padding(5em, 5em);\n        padding: 5em 5em 2.5em 5em;\n        max-width: 100%;\n        width: _size(inner-width);\n\n        @include breakpoint('<=xlarge') {\n            padding: 4em 4em 2em 4em;\n        }\n\n        @include breakpoint('<=large') {\n            width: 100%;\n        }\n\n        @include breakpoint('<=small') {\n            padding: 3em 2em 1em 2em;\n        }\n    }\n\n    &.alt {\n        background-color: _palette(bg-alt);\n    }\n\n    &.style1 {\n        background-color: _palette(accent1);\n    }\n\n    &.style1-alt {\n        background-color: _palette(accent1-alt);\n    }\n\n    &.style2 {\n        background-color: _palette(accent2);\n    }\n\n    &.style2-alt {\n        background-color: _palette(accent2-alt);\n    }\n\n    &.style3 {\n        background-color: _palette(accent3);\n    }\n\n    &.style3-alt {\n        background-color: _palette(accent3-alt);\n    }\n\n    &.fullscreen {\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        min-height: 100vh;\n\n        body.is-ie & {\n            height: 100vh;\n        }\n\n        @include breakpoint('<=large') {\n            min-height: calc(100vh - 2.5em);\n\n            body.is-ie & {\n                height: calc(100vh - 2.5em);\n            }\n        }\n\n        @include breakpoint('<=small') {\n            padding: 2em 0;\n            min-height: 0;\n\n            body.is-ie & {\n                height: auto;\n            }\n        }\n    }\n\n    &.fade-up {\n        > .inner {\n            transform: translateY(0);\n            transition: opacity #{_duration(activation)} ease, transform #{_duration(activation)} ease;\n            opacity: 1;\n        }\n\n        &.inactive,\n        body.is-preload & {\n            > .inner {\n                opacity: 0;\n                transform: translateY(1em);\n            }\n        }\n    }\n\n    &.fade-down {\n        > .inner {\n            transform: translateY(0);\n            transition: opacity #{_duration(activation)} ease, transform #{_duration(activation)} ease;\n            opacity: 1;\n        }\n\n        &.inactive,\n        body.is-preload & {\n            > .inner {\n                opacity: 0;\n                transform: translateY(-1em);\n            }\n        }\n    }\n\n    &.fade {\n        > .inner {\n            transition: opacity #{_duration(activation)} ease;\n            opacity: 1;\n        }\n\n        &.inactive,\n        body.is-preload & {\n            > .inner {\n                opacity: 0;\n            }\n        }\n    }\n}\n"]}